set nocompatible              " be iMproved, required

if empty($DOTFILES)
	let $DOTFILES = '$HOME/.dotfiles'
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
source $DOTFILES/vim/plugins.vim

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => User Interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on
"set nonumber
set number									" show line numbers -> see key mapping for toggling
set relativenumber							" show relative line numbers -> see key mappings for toggling
set autoindent
set smartindent
set autoread								" read files if changed on file system
set ttyfast									" faster rendering
set encoding=utf8
set noesckeys                               " speedup O (insert line above)


"-------Visuals-------"
let bgColor = 234
set cursorline								" highlight current line -> see key mapping for toggle
hi CursorLine cterm=NONE ctermbg=236
set title                                   " set terminal title
colorscheme atom-dark-256
set t_CO=256
set scrolloff=2								" minimum lines above/below cursor
set list listchars=tab:»·,trail:·			" show extra space characters

hi LineNr ctermbg=234
" set foldcolumn=2                            " set foldcolumn for left padding    
" hi foldcolumn ctermbg=bg

"-------command line--------"
set wildmenu								" enhanced command line completion
set hidden									" current buffer can be put into background
set showcmd									" show incomplete commands
set noshowmode								" don't show which mode disabled for PowerLine
set wildmode=list:longest 					" complete files like a shell

"-------tab stops-------"
set tabstop=4								" size of a hard tabstop
set shiftwidth=4							" size of an indent
set softtabstop=4							" a combination of spaces and tabs are used to simulate tabstops at a width
set expandtab								" tabs are spaces

"-------code folding-------"
set foldmethod=syntax                       " fold based on indent
set foldnestmax=10                          " deepest fold is 10 levels
set nofoldenable                            " don't fold by default
set foldlevel=1

"-------line wrapping-------"
set wrap                                    " turn on line wrapping
set wrapmargin=8                            " wrap lines when coming within n characters from side
set linebreak                               " set soft wrapping
set showbreak=…                             " show ellipsis at breaking

"-------Search-------"
set incsearch                               " start search by typing
set showmatch                               " show matching braces
set nohlsearch								" don't show all occurrences of search term -> see mapping for toggle

"-------Split Management-------"
set splitbelow                              " Make splits default to below...
set splitright                              " And to the right. This feels more natural.

"-------spelling------"
set complete+=kspell						" enable dictionary completion if spelling is enabled
" get spell files from http://ftp.vim.org/pub/vim/runtime/spell/en.utf-8.spl
set spelllang=en_us                         " default en language, for toggling language see mappings

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"-------Auto-Command-------"
augroup autosourcing

    "reload .vimrc on save
    autocmd!
    autocmd BufWritePost .vimrc source %

augroup END

"-------file type specific-------"
augroup fileType

    autocmd!
    autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
    autocmd FileType html setlocal ts=4 sts=4 sw=4 noexpandtab indentkeys-=*<return>
    autocmd FileType markdown
		\ setlocal textwidth=0 wrapmargin=0 wrap spell |
		\ TableModeEnable
    autocmd FileType apache setlocal ts=4 sw=4 sts=4 sr noet
    autocmd FileType php noremap <Leader>u :call PhpInsertUse()<CR>
    autocmd FileType php noremap <Leader>e :call PhpExpandClass()<CR>

augroup END

" setting up tmp directories for swp files
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
" set undo dir
set undofile
set undodir=~/.vim/undo

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Key Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let mapleader = ','							" replaces \ as default 

"toggle number
nnoremap <leader>n :set number!<cr>

"toggle relative number
nnoremap <leader>rn :set relativenumber!<cr>

" toggle cursor line" toggle cursor line
nnoremap <leader>cl :set cursorline!<cr>

" toggle current highlighting
noremap <leader>/	:set hlsearch!<CR>

" toggle spell checking
map <leader>sp :setlocal spell!<CR>
map <leader>spd :setlocal spelllang=de<CR>
map <leader>spe :setlocal spelllang=en_us<CR>

" open .vimrc in new tab
map <leader>vrc :tabe ~/.vimrc<CR>

" open vim cheat sheet in new tab
map <leader>vcs :tabe ~/.dotfiles/vim/cheat-sheet.md<CR>

" open .zshrc in new tab
map <leader>zrc :tabe ~/.zshrc<CR>

" toggle list characters
noremap <leader>l :set list!<CR>

" We'll set simpler mappings to switch between splits.
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>

" keeps selection on indent
vmap < <gv
vmap > >gv

nmap G Gzz
nmap n nzz
nmap N Nzz
nmap { {zz
nmap } }zz

" insert line above/below and jump back
nmap g<C-O> o<ESC>k
nmap gO O<ESC>j

" unmap arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <PageUp> <Nop>
noremap <PageDown> <Nop>
inoremap <Up> <Nop>
inoremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>
inoremap <PageUp> <Nop>
inoremap <PageDown> <Nop>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"/
"/ NERDTree
"/
"ctrl+n toggles nerd tree
map <C-n> :NERDTreeToggle<CR>
let NERDTreeHijackNetrw = 0				"disable highjacking filebrowser
"/
"/ Greplace 
"/
set grepprg=ag							" Ag for search
"/
"/ CtrlP 
"/
let g:ctrlp_show_hidden = 1				"enable hidden files
"/
"/ easymotion
"/
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)
"/
"/ taglist
"/
" toggle taglist of open buffers
map  <Leader>tl :TlistToggle<CR>

"/
"/ vim table
"/
" for md syntax
let g:table_mode_corner="|"
"/
"/ vdebug
"/
let g:vdebug_options = { 'break_on_open': 0, 'ide_key': 'PHPSTORM' }    " no stop on first line

"/
"/ phpqa
"/
let g:phpqa_open_loc = 0

"/
"/ multiple cursors
"/
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'


"/
"/ Syntastic
"/
" general
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs=1

" JavaScript
let g:syntastic_javascript_checkers = ['jshint']

